clear all;
close all;
clc;

set(groot,'defaulttextinterpreter','latex');
set(groot,'defaultAxesTickLabelInterpreter','latex');
set(groot,'defaultLegendInterpreter','latex');
set(groot,'defaultLineLineWidth',1.25) % LineWidth
set(groot,'defaultAxesFontSize',13) % Fontsize

% c = ['#3498DB'; "#EFB810"; '#C0392B'; '#28B463' ;'#8E44AD'];

newcolours = ['#000080'; "#EFB810"; '#C0392B'; '#28B463'; '#3498DB'; '#8E44AD'; '#FFA07A'; '#D748DF'; '#59D13D'; '#020202' ];
colororder(newcolours)


[M1,K1,nodes1] = ReadPunchFile_n('viga1beam.pch',3);
[M2,K2,nodes2] = ReadPunchFile_n('viga2beam.pch',3);

nret= 5;
n1 = length(nodes1);
n2 = length(nodes2);
M = zeros(length(M1)+length(M2)-1);
K = zeros(length(M1)+length(M2)-1);

M(1:n1, 1:n1) = M1(:,:);
M(n1:end, n1:end) = M2(:,:);
M(n1, n1) = M1(end, end) + M2(1, 1);

K(1:n1, 1:n1) = K1(:,:);
K(n1:end, n1:end) = K2(:,:);
K(n1, n1) = K1(end, end) + K2(1, 1);


Mff = [M(1, 1),0; 0, M(end, end)];
Mfi = [M(1, 2:end-1); M(end, 2:end-1)];
Mif = [M(2:end-1, 1), M(2:end-1, end)];
Mii = M(2:end-1, 2:end-1);

Kff = [K(1, 1),0; 0, K(end, end)];
Kfi = [K(1, 2:end-1); K(end, 2:end-1)];
Kif = [K(2:end-1, 1), K(2:end-1, end)];
Kii = K(2:end-1, 2:end-1);

M_t = [Mff Mfi;
        Mif Mii];

K_t = [Kff Kfi;
        Kif Kii];

% eig(Kfem,Mfem);
% [d,ind] = sort(diag(autovalor));
% omega_2_s = autovalor(ind,ind);
% avect_s = autovector(:,ind);
% frec_nat = real(sqrt(diag(omega_2_s(1:20,1:20))));
% modos_p = avect_s(:,1:5);

[avects, omegas_2] = eig(Kii,Mii);
[d,ind] = sort(diag(omegas_2));
omega_2_s = omegas_2(ind,ind);
avect_s = avects(:,ind);
omega_0 = real(sqrt(diag(omega_2_s(1:20,1:20))));
modos_p = avect_s(:,1:5);


w =linspace (1,2000,1999);
F = zeros(n1+n2-3, 1);
F(round(n1/2)-1) = -1;
q = zeros(length(w), n1+n2-3);
for i = 1:length(w)
    q(i, :) = ((Kii-(w(i)*2*pi)^2*Mii))\F;
    v(i, :) = q(i, :).*w(i)*1000;
    v_RMS(i) = log10(sqrt(sum(v(i, :).^2)/length(F)));

end
%plot(w, v_RMS)



%% TRANSFORMACION CB
    
Phi_s = [eye(size(Kff, 1)) ; -inv(Kii)*Kif];
Phi_i = [zeros(2,109); avects];    
Phi_CB_full = [Phi_s Phi_i];
Phi_CB = Phi_CB_full(:, 111-nret:111)

M_CB = abs(Phi_CB'*M_t*Phi_CB);
K_CB = abs(Phi_CB'*K_t*Phi_CB);
F_CB =zeros(111, 1);
F_CB(27, 1) = -1;
F_CB = Phi_CB'*F_CB;
F_CB(1:2) = [];
M_CB(1:2, :) = [];
M_CB(:, 1:2) = [];
K_CB(1:2, :) = [];
K_CB(:, 1:2) = [];

[avects_CB, omegas_2_CB] = eigs(K_CB\M_CB, 109, "smallestabs");
omegas_CB=diag(sqrt(omegas_2_CB));
freqs_CB = omegas_CB/(2*pi);

for i = 1:length(w)
    q_CB(i, :) = [0;0;(K_CB-(w(i)*2*pi)^2.*M_CB)^(-1)*F_CB];
    v_CB(i, :) = Phi_CB*q_CB(i, :)'.*w(i)*1000;
    v_CB_RMS(i) = log10(sqrt(sum(v_CB(i, 3:end).^2)/length(F)));

end
figure(2)
hold on
grid on
plot(w, v_RMS,'r', 'LineWidth',1.5)
plot(w, v_CB_RMS,'b', 'LineWidth',1.5, LineStyle='-')
hold off

M_b_1_3 = [89.1, 112, 141,178,224,282, 355, 447, 562, 708, 891, 1122, 1413, 1778, 2239, 2818]%;;, 3548, 4467, 5623, 7079, 8913, 11220];

% %% 
% figure(1)
% plot(w, v_RMS,'r', 'LineWidth',1.5)
% plot(w, v_CB_RMS,'b', 'LineWidth',1.5, LineStyle='-')
% 
% % xline(real(f_CB(real(f_CB)<=6000)))
% figure(1)
% plot(w, v_RMS,'r', 'LineWidth',1.5)
% plot(w, v_CB_RMS,'b', 'LineWidth',1.5, LineStyle='-')
% colors = ["blue", "yellow"];
% cc=1;
% for i = 1:15
%     if cc ==3
%         cc=1;
%     end
% x_ecl = [M_b_1_3(i), M_b_1_3(i+1), M_b_1_3(i+1), M_b_1_3(i)];
% y_ecl = [0, 0, max(log10(v_RMS(1,:))), max(log10(v_RMS(1,:)))];
% patch(x_ecl,10.^y_ecl, colors(cc),'EdgeColor','none','FaceAlpha',.2)
% cc = cc+1;
% end

figure(1)
hold on
grid on
plot(w,v_CB_RMS,'LineWidth',1.5)
% for i = 1:length(w)
%     xline(w(i),':','Color','r','LineWidth',1.5)
% end 
hold off

figure(2)
hold on
grid on
plot(w,v_RMS,'LineWidth',1.5)
% for i = 1:length(w)
%     xline(w(i),':','Color','r','LineWidth',1.5)
% end 
hold off

figure(3)
hold on
grid on
colors = ["blue", "yellow"];

cc=1;
for i = 1:15
    if cc ==3
        cc=1;
    end
    x_ecl = [M_b_1_3(i), M_b_1_3(i+1), M_b_1_3(i+1), M_b_1_3(i)];
    y_ecl = [-1e20, -1e20, log10(max(v_RMS)), log10(max(v_RMS))];
    patch(x_ecl,10.^y_ecl, colors(cc),'EdgeColor','none','FaceAlpha',.2)
    cc = cc+1;
end
plot(w,v_CB_RMS,'LineWidth',1.5,'Color','r')
plot(w,v_RMS,'LineWidth',1.5,'Color','b','LineStyle','--')
ylim([0,6])
xlim([0, 2000])
hold off

function [MASS,STIFFNESS,nodes] = ReadPunchFile_n(punchfile,dof)

%READUNCHFILE_ND Read Mass and Stiffness matrices from punch file generated by MSC Nastran.
%    [MASS,STIFFNESS,nodes] = ReadPunchFile_nD(punchfile,dof) reads data from a Nastran punch file
%    'punchfile' providing the MASS and STIFFNESS matrices on the degrees of freedom 'dof' ordered as the array 'nodes'
%    and for each node as ordered in 'dof'
%
%	 * IMPORTANT NOTE *
%	 Node numbers should be above 6 (1 from 6 reserved for degrees of freedom)
%
disp(['Reading Mass and Stiffness Matrices from file ' punchfile(1:find(punchfile=='.')-1)]);
% -------------------------------------------------------------------------
% FIND OUT THE START AND END OF THE MASS MATRIX SECTION
% -------------------------------------------------------------------------
file=textread(punchfile,'%s','delimiter','\n','whitespace','');
found_start = 0;
found_end = 0;
pos=0;
%
while found_start==0 || found_end==0,
    pos=pos+1;
    if file{pos}(1)=='D',
        if file{pos}(1:12)=='DMIG*   MAAX';
            % First row of Mass Matrix section starts with 'DMIG*   MAAX'
            if found_start==0,
                found_start=1;
                startline=pos;
            end
        end
        if file{pos}(1:12)=='DTI     TUG1';
            % First row AFTER Mass Matrix section starts with 'DMIG    VAX'
            found_end=1;
            endline=pos-1;
        end
    end
end

% READ OF THE MASS MATRIX SECTION
[col1,col2,col3,col4] = textread(punchfile,'%s%s%u%f',endline-startline+1,'delimiter',' ','headerlines',startline-1);
% For each data row and columns of the Mass Matrix are defined and stored
% into MASS
nodes_aux = col3(find(col3>6));
nodes = unique(nodes_aux);
Ndof = length(nodes)*length(dof);
MASS = zeros(Ndof,Ndof);
h1 = waitbar(0,'Reading mass matrix');
for p=1:length(col3),
   waitbar(p/length(col3),h1);
   if(ismember(col3(p),nodes)),

        % Start line for new node
        n=find(nodes==col3(p));
        row = length(dof)*(n-1)+find(dof==col4(p));
   else
        
        % Set of columns for previous node
        n=find(nodes==str2num(cell2mat(col2(p))));
        column = length(dof)*(n-1)+find(dof==col3(p));
        value=col4(p);
        MASS(row,column)=value;
        if row~=column,
            MASS(column,row)=value;
        end
   end
end
close(h1);
% FIND OUT THE START AND END OF THE STIFFNESS MATRIX SECTION
% -------------------------------------------------------------------------
file=textread(punchfile,'%s','delimiter','\n','whitespace','');
found_start = 0;
found_end = 0;
pos=0;
while found_start==0 || found_end==0,
    pos=pos+1;
    if file{pos}(1)=='D',
        if file{pos}(1:12)=='DMIG*   KAAX';
            % First row of Stiffness Matrix section starts with 'DMIG*   KAAX'
            if found_start==0,
                found_start=1;
                startline=pos;
            end
        end
        if file{pos}(1:12)=='DMIG    MAAX';
            % First row AFTER Stiffness Matrix section starts with 'DMIG    MAAX'
            found_end=1;
            endline=pos-1;
        end
    end
end
% READ OF THE STIFFNESS MATRIX FILE SECTION
[col1,col2,col3,col4] = textread(punchfile,'%s%s%u%f',endline-startline+1,'delimiter',' ','headerlines',startline-1);
% For each data row and columns of the Mass Matrix are defined and stored into STIFFNESS
STIFFNESS = zeros(Ndof,Ndof);
h2 = waitbar(0,'Reading stiffness matrix');
for p=1:length(col3),
   waitbar(p/length(col3),h2);
   if(ismember(col3(p),nodes)),

        % Start line for new node
        n=find(nodes==col3(p));
        row = length(dof)*(n-1)+find(dof==col4(p));
   else

        % Set of columns for previous node
        n=find(nodes==str2num(cell2mat(col2(p))));
        column = length(dof)*(n-1)+find(dof==col3(p));
        value=col4(p);
        STIFFNESS(row,column)=value;
        if row~=column,
            STIFFNESS(column,row)=value;
        end
   end
end
close(h2);
end
